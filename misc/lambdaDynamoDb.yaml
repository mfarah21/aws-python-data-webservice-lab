Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - "dynamodb:*"
            Resource: "*"
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource: "*"
 
 
  AccountsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'tomc-cf'
      AttributeDefinitions:
          -
            AttributeName: "AccountNumber"
            AttributeType: "S"
          -
            AttributeName: "RoutingNumber"
            AttributeType: "S"
      KeySchema:
        -
          AttributeName: "AccountNumber"
          KeyType: "HASH"
        -
          AttributeName: "RoutingNumber"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
 
  BasicLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Role:
        Fn::GetAtt:
          - "LambdaExecutionRole"
          - "Arn"
      Runtime: "nodejs12.x"
      Code:
        ZipFile: |
          exports.handler = (event, context, callback) => {
           
            const response = {
                statusCode: 200,
                body: 'Hello World!',
            };
            callback(null, response);
 
          };